{"ast":null,"code":"import { Component, NgModule, ViewContainerRef } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nconst _c0 = [\"container\"];\nexport let ParentComponent = /*#__PURE__*/(() => {\n  class ParentComponent {\n    constructor(compiler) {\n      this.compiler = compiler;\n    }\n    ngAfterViewInit() {\n      // Must clear cache.\n      this.compiler.clearCache();\n      // Define the component using Component decorator.\n      const component = Component({\n        template: '<div>This is the dynamic template. Test value: {{test}}</div>',\n        styles: [':host {color: red}']\n      })(class {\n        constructor() {\n          this.test = 'some value';\n        }\n      });\n      // Define the module using NgModule decorator.\n      const module = NgModule({\n        declarations: [component]\n      })(class {});\n      // Asynchronously (recommended) compile the module and the component.\n      this.compiler.compileModuleAndAllComponentsAsync(module).then(factories => {\n        // Get the component factory.\n        const componentFactory = factories.componentFactories[0];\n        // Create the component and add to the view.\n        const componentRef = this.container.createComponent(componentFactory);\n        // Modifying the property and triggering change detection.\n        setTimeout(() => componentRef.instance.test = 'some other value', 2000);\n      });\n    }\n    static #_ = this.ɵfac = function ParentComponent_Factory(t) {\n      return new (t || ParentComponent)(i0.ɵɵdirectiveInject(i0.Compiler));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: ParentComponent,\n      selectors: [[\"app-parent\"]],\n      viewQuery: function ParentComponent_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(_c0, 5, ViewContainerRef);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.container = _t.first);\n        }\n      },\n      decls: 2,\n      vars: 0,\n      consts: [[\"container\", \"\"]],\n      template: function ParentComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelement(0, \"div\", null, 0);\n        }\n      },\n      encapsulation: 2\n    });\n  }\n  return ParentComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}